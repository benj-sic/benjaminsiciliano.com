const atlantaBiotechEcosystem = require('../src/atlanta_biotech_data.js');
const { nodes, links } = atlantaBiotechEcosystem.default;
const fs = require('fs');
const path = require('path');

console.log('Starting network filtering for Emory-specific data...');

const emoryIds = new Set();

// Step 1: Identify core Emory entities
nodes.forEach(node => {
  const isInName = node.name && node.name.toLowerCase().includes('emory');
  const isInDescription = node.description && node.description.toLowerCase().includes('emory');
  const isSpinout = node.description && node.description.toLowerCase().includes('emory spinout');

  if (isInName || isInDescription || isSpinout) {
    emoryIds.add(node.id);
  }
});

// A few manually added core IDs just in case they were missed
emoryIds.add('emory');
emoryIds.add('emory_healthcare');
emoryIds.add('emory_ott');
emoryIds.add('emory_innovations');
emoryIds.add('emory_iou');


// Step 2: Expand to include all connected nodes (first-degree connections)
const connectedIds = new Set(emoryIds);
links.forEach(link => {
  if (emoryIds.has(link.source)) {
    connectedIds.add(link.target);
  }
  if (emoryIds.has(link.target)) {
    connectedIds.add(link.source);
  }
});

// Step 3: Filter nodes based on the collected IDs
const emoryNodes = nodes.filter(node => connectedIds.has(node.id));

// Step 4: Filter links to only include connections between the filtered nodes
const emoryLinks = links.filter(link => connectedIds.has(link.source) && connectedIds.has(link.target));

console.log(`Found ${emoryNodes.length} nodes and ${emoryLinks.length} links for the Emory sub-network.`);

// Step 5: Write the new data to a file
const outputData = `// This file is generated by scripts/filter_emory_network.js
// It contains a subset of the data from atlanta_biotech_data.js,
// filtered to only include nodes and links related to Emory University.

const nodes = ${JSON.stringify(emoryNodes, null, 2)};

const links = ${JSON.stringify(emoryLinks, null, 2)};

module.exports = { nodes, links };
`;

const outputPath = path.join(__dirname, '../src/emory_biotech_data.js');
fs.writeFileSync(outputPath, outputData);

console.log(`Emory-specific network data has been written to ${outputPath}`);
